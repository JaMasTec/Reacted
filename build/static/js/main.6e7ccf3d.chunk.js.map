{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","className","onClick","text","Header","title","onAdd","showAdd","defaultProps","Task","reminder","onDoubleClick","onToggle","id","onDelete","day","Tasks","tasks","map","task","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","currentTarget","checked","App","showAddTask","setShowAddTask","setTasks","console","log","Math","floor","random","newTask","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAQeA,EARA,SAACC,GAChB,OACE,8BACA,wBAAQC,UAAU,MAAMC,QAASF,EAAME,QAAvC,SAAiDF,EAAMG,UCDnDC,EAAS,SAACJ,GAKhB,OACE,yBAAQC,UAAU,SAAlB,UACA,6BAAKD,EAAMK,QAEX,cAAC,EAAD,CAAQH,QAASF,EAAMM,MAAOH,KAAMH,EAAMO,QAAU,IAAM,UAK5DH,EAAOI,aAAa,CAClBH,MAAM,yBAGR,IAMeD,IChBAK,EAVF,SAACT,GACd,OACE,sBAAKC,UAAS,gBAAWD,EAAMU,SAAW,WAAa,IAAMC,cAAe,kBAAMX,EAAMY,SAASZ,EAAMa,KAAvG,UACE,+BAAKb,EAAMG,KAAX,KAAkB,wBAAQF,UAAU,SAASC,QAAS,kBAAMF,EAAMc,SAASd,EAAMa,KAA/D,kBAElB,4BAAIb,EAAMe,UCICC,EAPD,SAAChB,GACf,OACE,8BACCA,EAAMiB,MAAMC,KAAI,SAACC,GAAD,OAAW,cAAC,EAAD,CAAoBhB,KAAMgB,EAAKhB,KAAMY,IAAKI,EAAKJ,IAAKD,SAAUd,EAAMc,SAAUD,GAAIM,EAAKN,GAAID,SAAUZ,EAAMY,SAAUF,SAAUS,EAAKT,UAAzHS,EAAKN,UC6B/BO,EAjCC,SAACpB,GACf,MAAwBqB,mBAAS,IAAjC,mBAAOlB,EAAP,KAAamB,EAAb,KACA,EAAsBD,mBAAS,IAA/B,mBAAON,EAAP,KAAYQ,EAAZ,KACA,EAAgCF,mBAAS,IAAzC,mBAAOX,EAAP,KAAiBc,EAAjB,KAYF,OACE,uBAAMvB,UAAU,WAAWwB,SAZV,SAACC,GAChBA,EAAEC,iBACIxB,GAIJH,EAAMM,MAAM,CAACH,OAAMY,MAAKL,aACxBY,EAAQ,IACRC,EAAO,IACPC,GAAY,IANVI,MAAM,gDASZ,UACE,sBAAK3B,UAAU,eAAf,UACE,iDACA,uBAAO4B,KAAK,OAAOC,YAAY,0BAA0BC,MAAO5B,EAAM6B,SAAU,SAACN,GAAD,OAAOJ,EAAQI,EAAEO,OAAOF,aAE1G,sBAAK9B,UAAU,eAAf,UACE,0CACA,uBAAO4B,KAAK,OAAOC,YAAY,eAAeC,MAAOhB,EAAKiB,SAAU,SAACN,GAAD,OAAOH,EAAOG,EAAEO,OAAOF,aAE7F,sBAAK9B,UAAU,eAAf,UACE,oDACA,uBAAO4B,KAAK,WAAWE,MAAOrB,EAAWsB,SAAU,SAACN,GAAD,OAAOF,EAAYE,EAAEQ,cAAcC,eAExF,uBAAOlC,UAAU,gBAAgB4B,KAAK,SAASE,MAAM,gBCgC1CK,MAvDf,WACA,MAAoCf,oBAAS,GAA7C,mBAAOgB,EAAP,KAAoBC,EAApB,KACA,EAA0BjB,mBAAS,CACnC,CACER,GAAG,EACHV,KAAK,qBACLY,IAAK,oBACLL,UAAU,GAEZ,CACEG,GAAG,EACHV,KAAK,uBACLY,IAAK,uBACLL,UAAU,GAEZ,CACEG,GAAG,EACHV,KAAK,gCACLY,IAAK,oBACLL,UAAU,KAjBZ,mBAAOO,EAAP,KAAcsB,EAAd,KA2CE,OACE,gCACA,cAAC,EAAD,CAAQlC,MAAM,gBAAgBC,MAAO,kBAAIgC,GAAgBD,IAAc9B,QAAS8B,IAC/EA,GAAe,cAAC,EAAD,CAAS/B,MAdb,SAACa,GACdqB,QAAQC,IAAItB,GACZ,IAAMN,EAAM6B,KAAKC,MAAoB,IAAdD,KAAKE,UAAkB,EACxCC,EAAO,aAAIhC,MAAOM,GACxBoB,EAAS,GAAD,mBAAKtB,GAAL,CAAY4B,QAWnB,cAAC,EAAD,CAAO5B,MAAOA,EAAOH,SAzBN,SAACD,GAElB0B,EAAStB,EAAM6B,QAAO,SAAC3B,GAAD,OAAUA,EAAKN,KAAOA,OAuBCD,SApBxB,SAACC,GAEpB0B,EAAStB,EAAMC,KAAI,SAACC,GAAD,OAAUA,EAAKN,KAAOA,EAAZ,2BAAqBM,GAArB,IAA0BT,UAAUS,EAAKT,WAAYS,aC1BvE4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6e7ccf3d.chunk.js","sourcesContent":["const Button = (props) =>{\nreturn(\n  <div>\n  <button className='btn' onClick={props.onClick}>{props.text}\n  </button>\n  </div>\n)\n}\nexport default Button\n","import Button from './Button'\n\nconst Header = (props) =>{\n  const onClick = () =>{\n    console.log('Click');\n  }\n\nreturn(\n  <header className='header'>\n  <h1>{props.title}</h1>\n  {/*<Button onClick={onClick} text='Nuevo'/>*/}\n  <Button onClick={props.onAdd} text={props.showAdd ? 'x' : '+'}/>\n  </header>\n)\n}\n\nHeader.defaultProps={\n  title:'Título por defecto'\n}\n\nconst headingStyle={\ncolor:'red',\nbackgroundColor:'black'\n}\n\n\nexport default Header\n","const Task = (props) =>{\r\nreturn(\r\n  <div className={`task  ${props.reminder ? 'reminder' : ''}`} onDoubleClick={() => props.onToggle(props.id)}>\r\n    <h3>{props.text}  <button className='delete' onClick={() => props.onDelete(props.id)}>X\r\n    </button></h3>\r\n    <p>{props.day}</p>\r\n  </div>\r\n\r\n)\r\n}\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = (props) =>{\r\nreturn(\r\n  <div>\r\n  {props.tasks.map((task) => (<Task key={task.id} text={task.text} day={task.day} onDelete={props.onDelete} id={task.id} onToggle={props.onToggle} reminder={task.reminder} />))}\r\n  </div>\r\n)\r\n}\r\nexport default Tasks\r\n","import {useState} from 'react'\r\nconst AddTask = (props) =>{\r\n  const [text, setText] = useState('')\r\n  const [day, setDay] = useState('')\r\n  const [reminder, setReminder] = useState('')\r\n  const onSubmit = (e) =>{\r\n    e.preventDefault()\r\n      if(!text){\r\n        alert('Debes de agregar el nombre del recordatorio')\r\n        return\r\n      }\r\n      props.onAdd({text, day, reminder})\r\n      setText('')\r\n      setDay('')\r\n      setReminder(false)\r\n  }\r\nreturn(\r\n  <form className='add-form' onSubmit={onSubmit}>\r\n    <div className='form-control'>\r\n      <label>Recordatorio</label>\r\n      <input type='text' placeholder='Nombre del Recordatorio' value={text} onChange={(e) => setText(e.target.value)} />\r\n    </div>\r\n    <div className='form-control'>\r\n      <label>Fecha</label>\r\n      <input type='text' placeholder='Hora y Fecha' value={day} onChange={(e) => setDay(e.target.value)} />\r\n    </div>\r\n    <div className='form-control'>\r\n      <label>¿Recordarme?</label>\r\n      <input type='checkbox' value={reminder}  onChange={(e) => setReminder(e.currentTarget.checked)} />\r\n    </div>\r\n    <input className='btn btn-block' type='submit' value='Agregar' />\r\n  </form>\r\n)\r\n}\r\nexport default AddTask\r\n","//import logo from './logo.svg';\r\n//import './App.css';\r\nimport {useState} from 'react'\r\nimport Header from './components/Header'\r\nimport Tasks from './components/Tasks'\r\nimport AddTask from './components/AddTask'\r\n\r\nfunction App() {\r\nconst [showAddTask, setShowAddTask]=useState(false)\r\nconst [tasks, setTasks] = useState([\r\n{\r\n  id:1,\r\n  text:'Cita con el Doctor',\r\n  day: '25 de Agosto 2021',\r\n  reminder: true\r\n},\r\n{\r\n  id:2,\r\n  text:'Videoconferencia ITA',\r\n  day: '3 de Septiembre 2021',\r\n  reminder: false\r\n},\r\n{\r\n  id:3,\r\n  text:'Entrega de Avance de Proyecto',\r\n  day: '15 de Agosto 2021',\r\n  reminder: true\r\n  }\r\n])\r\n\r\n\r\nconst deleteTask = (id) =>{\r\n  //console.log('delete', id);\r\n  setTasks(tasks.filter((task) => task.id !== id))\r\n}\r\n\r\nconst toggleReminder = (id) =>{\r\n    //console.log('Reminder', id);\r\n    setTasks(tasks.map((task) => task.id === id ? {...task,reminder:!task.reminder} : task))\r\n}\r\n\r\nconst addTask = (task) =>{\r\n   console.log(task);\r\n   const id =  Math.floor(Math.random()*10000) + 1\r\n   const newTask = {id, ...task}\r\n   setTasks([...tasks, newTask])\r\n}\r\n\r\nconst nombre = 'Mascorro'\r\nconst x = !true\r\nconst y = !false\r\n\r\n  return (\r\n    <div>\r\n    <Header title='Recordatorios' onAdd={()=>setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\r\n    {showAddTask && <AddTask onAdd={addTask} />}\r\n    <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}